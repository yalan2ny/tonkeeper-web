/* tslint:disable */
/* eslint-disable */
/**
 * Custodial-Battery REST API.
 * REST API for Custodial Battery which provides gas to different networks to help execute transactions.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@tonkeeper.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Refund } from './Refund';
import {
    RefundFromJSON,
    RefundFromJSONTyped,
    RefundToJSON,
    RefundToJSONTyped,
} from './Refund';
import type { AccountAddress } from './AccountAddress';
import {
    AccountAddressFromJSON,
    AccountAddressFromJSONTyped,
    AccountAddressToJSON,
    AccountAddressToJSONTyped,
} from './AccountAddress';

/**
 * 
 * @export
 * @interface SmartContractAction
 */
export interface SmartContractAction {
    /**
     * 
     * @type {AccountAddress}
     * @memberof SmartContractAction
     */
    executor: AccountAddress;
    /**
     * 
     * @type {AccountAddress}
     * @memberof SmartContractAction
     */
    contract: AccountAddress;
    /**
     * amount in nanotons
     * @type {number}
     * @memberof SmartContractAction
     */
    tonAttached: number;
    /**
     * 
     * @type {string}
     * @memberof SmartContractAction
     */
    operation: string;
    /**
     * 
     * @type {string}
     * @memberof SmartContractAction
     */
    payload?: string;
    /**
     * 
     * @type {Refund}
     * @memberof SmartContractAction
     */
    refund?: Refund;
}

/**
 * Check if a given object implements the SmartContractAction interface.
 */
export function instanceOfSmartContractAction(value: object): value is SmartContractAction {
    if (!('executor' in value) || value['executor'] === undefined) return false;
    if (!('contract' in value) || value['contract'] === undefined) return false;
    if (!('tonAttached' in value) || value['tonAttached'] === undefined) return false;
    if (!('operation' in value) || value['operation'] === undefined) return false;
    return true;
}

export function SmartContractActionFromJSON(json: any): SmartContractAction {
    return SmartContractActionFromJSONTyped(json, false);
}

export function SmartContractActionFromJSONTyped(json: any, ignoreDiscriminator: boolean): SmartContractAction {
    if (json == null) {
        return json;
    }
    return {
        
        'executor': AccountAddressFromJSON(json['executor']),
        'contract': AccountAddressFromJSON(json['contract']),
        'tonAttached': json['ton_attached'],
        'operation': json['operation'],
        'payload': json['payload'] == null ? undefined : json['payload'],
        'refund': json['refund'] == null ? undefined : RefundFromJSON(json['refund']),
    };
}

  export function SmartContractActionToJSON(json: any): SmartContractAction {
      return SmartContractActionToJSONTyped(json, false);
  }

  export function SmartContractActionToJSONTyped(value?: SmartContractAction | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'executor': AccountAddressToJSON(value['executor']),
        'contract': AccountAddressToJSON(value['contract']),
        'ton_attached': value['tonAttached'],
        'operation': value['operation'],
        'payload': value['payload'],
        'refund': RefundToJSON(value['refund']),
    };
}

