/* tslint:disable */
/* eslint-disable */
/**
 * Custodial-Battery REST API.
 * REST API for Custodial Battery which provides gas to different networks to help execute transactions.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@tonkeeper.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PurchasesPurchasesInnerRefundInformationRefunded } from './PurchasesPurchasesInnerRefundInformationRefunded';
import {
    PurchasesPurchasesInnerRefundInformationRefundedFromJSON,
    PurchasesPurchasesInnerRefundInformationRefundedFromJSONTyped,
    PurchasesPurchasesInnerRefundInformationRefundedToJSON,
    PurchasesPurchasesInnerRefundInformationRefundedToJSONTyped,
} from './PurchasesPurchasesInnerRefundInformationRefunded';

/**
 * 
 * @export
 * @interface PurchasesPurchasesInnerRefundInformation
 */
export interface PurchasesPurchasesInnerRefundInformation {
    /**
     * 
     * @type {boolean}
     * @memberof PurchasesPurchasesInnerRefundInformation
     */
    fullyRefunded: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PurchasesPurchasesInnerRefundInformation
     */
    partiallyRefunded: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PurchasesPurchasesInnerRefundInformation
     */
    pendingRefund: boolean;
    /**
     * 
     * @type {PurchasesPurchasesInnerRefundInformationRefunded}
     * @memberof PurchasesPurchasesInnerRefundInformation
     */
    refunded?: PurchasesPurchasesInnerRefundInformationRefunded;
    /**
     * 
     * @type {PurchasesPurchasesInnerRefundInformationRefunded}
     * @memberof PurchasesPurchasesInnerRefundInformation
     */
    refundable?: PurchasesPurchasesInnerRefundInformationRefunded;
}

/**
 * Check if a given object implements the PurchasesPurchasesInnerRefundInformation interface.
 */
export function instanceOfPurchasesPurchasesInnerRefundInformation(value: object): value is PurchasesPurchasesInnerRefundInformation {
    if (!('fullyRefunded' in value) || value['fullyRefunded'] === undefined) return false;
    if (!('partiallyRefunded' in value) || value['partiallyRefunded'] === undefined) return false;
    if (!('pendingRefund' in value) || value['pendingRefund'] === undefined) return false;
    return true;
}

export function PurchasesPurchasesInnerRefundInformationFromJSON(json: any): PurchasesPurchasesInnerRefundInformation {
    return PurchasesPurchasesInnerRefundInformationFromJSONTyped(json, false);
}

export function PurchasesPurchasesInnerRefundInformationFromJSONTyped(json: any, ignoreDiscriminator: boolean): PurchasesPurchasesInnerRefundInformation {
    if (json == null) {
        return json;
    }
    return {
        
        'fullyRefunded': json['fully_refunded'],
        'partiallyRefunded': json['partially_refunded'],
        'pendingRefund': json['pending_refund'],
        'refunded': json['refunded'] == null ? undefined : PurchasesPurchasesInnerRefundInformationRefundedFromJSON(json['refunded']),
        'refundable': json['refundable'] == null ? undefined : PurchasesPurchasesInnerRefundInformationRefundedFromJSON(json['refundable']),
    };
}

  export function PurchasesPurchasesInnerRefundInformationToJSON(json: any): PurchasesPurchasesInnerRefundInformation {
      return PurchasesPurchasesInnerRefundInformationToJSONTyped(json, false);
  }

  export function PurchasesPurchasesInnerRefundInformationToJSONTyped(value?: PurchasesPurchasesInnerRefundInformation | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'fully_refunded': value['fullyRefunded'],
        'partially_refunded': value['partiallyRefunded'],
        'pending_refund': value['pendingRefund'],
        'refunded': PurchasesPurchasesInnerRefundInformationRefundedToJSON(value['refunded']),
        'refundable': PurchasesPurchasesInnerRefundInformationRefundedToJSON(value['refundable']),
    };
}

