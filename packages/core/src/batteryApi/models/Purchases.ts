/* tslint:disable */
/* eslint-disable */
/**
 * Custodial-Battery REST API.
 * REST API for Custodial Battery which provides gas to different networks to help execute transactions.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@tonkeeper.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PurchasesPurchasesInner } from './PurchasesPurchasesInner';
import {
    PurchasesPurchasesInnerFromJSON,
    PurchasesPurchasesInnerFromJSONTyped,
    PurchasesPurchasesInnerToJSON,
    PurchasesPurchasesInnerToJSONTyped,
} from './PurchasesPurchasesInner';

/**
 * 
 * @export
 * @interface Purchases
 */
export interface Purchases {
    /**
     * 
     * @type {number}
     * @memberof Purchases
     */
    totalPurchases: number;
    /**
     * 
     * @type {Array<PurchasesPurchasesInner>}
     * @memberof Purchases
     */
    purchases: Array<PurchasesPurchasesInner>;
}

/**
 * Check if a given object implements the Purchases interface.
 */
export function instanceOfPurchases(value: object): value is Purchases {
    if (!('totalPurchases' in value) || value['totalPurchases'] === undefined) return false;
    if (!('purchases' in value) || value['purchases'] === undefined) return false;
    return true;
}

export function PurchasesFromJSON(json: any): Purchases {
    return PurchasesFromJSONTyped(json, false);
}

export function PurchasesFromJSONTyped(json: any, ignoreDiscriminator: boolean): Purchases {
    if (json == null) {
        return json;
    }
    return {
        
        'totalPurchases': json['total_purchases'],
        'purchases': ((json['purchases'] as Array<any>).map(PurchasesPurchasesInnerFromJSON)),
    };
}

  export function PurchasesToJSON(json: any): Purchases {
      return PurchasesToJSONTyped(json, false);
  }

  export function PurchasesToJSONTyped(value?: Purchases | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'total_purchases': value['totalPurchases'],
        'purchases': ((value['purchases'] as Array<any>).map(PurchasesPurchasesInnerToJSON)),
    };
}

